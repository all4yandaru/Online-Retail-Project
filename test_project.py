# -*- coding: utf-8 -*-
"""Project Machine Learning - Online Retail.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Co1vPBtIjHFp001t85JjnWGCeHFQxxo8
"""

import numpy as np
import pandas as pd
import os

# read file
path = 'online_retail_II.csv'
data = pd.read_csv(path)
print("Data Describe ===========================")
print(data.describe())
print("=========================================")

data.isnull().sum()

data.info()

# ngatur maksimal data yang ditampilkan
pd.set_option("display.max_rows", 101)
pd.set_option("display.max_columns", 10)

# nyimpen data yang price sama quantity nya < 0 utk dihapus
negprice = data[data['Price'] < 0].sum()
negquantity = data[data['Quantity'] < 0].count()
print("Negprice =========================================")
print(negprice)
print("Negquantity =========================================")
print(negquantity)
print("=========================================")


np.set_printoptions(threshold=np.inf)
data['Description'].unique()

# ngedrop nilai kosong
df_new = data['Description']
df_new = df_new.dropna()
df_new.dropna()
df_new = pd.DataFrame(df_new)


my_list = [y for x in df_new['Description'] for y in x.split() if y.islower()]
mylist = list(set(my_list))
print("mylist =========================================")
print(mylist)
print("=========================================")

##menghapus data yang tidak sesuai (beli barang tapi nama barangnya gaada)
data_bad = data[data['Description'].isin([ mylist ])]

data = data[~data.apply(tuple,1).isin(data_bad.apply(tuple,1))]

##mengubah data Customer ID null menjadi 99999
data[['Customer ID']] =data[['Customer ID']].fillna(99999)
#replace null description values with 'Unknown'
data[['Description']] =data[['Description']].fillna('Unknown')

##menghapus data dengan pembelian negatif dan ID customer yang tidak sesuai
# nyisain nilai yang di atas 0 dan customer id yang sesungguhnya
data = data[data['Quantity'] > 0]
data = data[data['Customer ID'] != 99999]
##menghapus data pengembalian barang
data = data[~data["Invoice"].str.contains("C", na = False)]

data.info()

data = data.drop_duplicates()
data.shape

data.info()

#data.sort_values(by=['Quantity'])
data_uk = data[data.Country == 'United Kingdom']
data_uk.head(5)

#https://datascience.stackexchange.com/questions/64260/pearson-vs-spearman-vs-kendall/64261
correlation=data_uk.corr(method='kendall')
correlation

sns.heatmap(correlation)

sns.boxplot(x='Quantity', data=data_uk)

sns.boxplot(x='Price', data=data_uk)